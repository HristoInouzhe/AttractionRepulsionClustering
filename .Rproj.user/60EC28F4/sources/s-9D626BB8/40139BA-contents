X <- rbind(rmvnorm(50, mean = c(-1, 0.5), sigma = diag(0.25, 2)), rmvnorm(50, mean = c(-1, -0.5), sigma = diag(0.25, 2)),
            rmvnorm(50, mean = c(1, 0.5), sigma = diag(0.25, 2)), rmvnorm(50, mean = c(1, -0.5), sigma = diag(0.25, 2)))
Q <- cbind(matrix(rep(c(0, 1), 100), nrow = 2), matrix(rep(c(1, 0), 100), nrow = 2))
params <- c(1,1)
multDistance <- multiplicativeDistance(params, as.matrix(dist(X)), as.matrix(dist(t(Q))))

X <- rbind(rmvnorm(50, mean = c(-1, 0.5), sigma = diag(0.25, 2)), rmvnorm(50, mean = c(-1, -0.5), sigma = diag(0.25, 2)),
           rmvnorm(50, mean = c(1, 0.5), sigma = diag(0.25, 2)), rmvnorm(50, mean = c(1, -0.5), sigma = diag(0.25, 2)))
Q <- cbind(matrix(rep(c(0, 1), 100), nrow = 2), matrix(rep(c(1, 0), 100), nrow = 2))
params = list(U = array(0, dim = c(2,2)), v = 1, V = matrix(c(1, -1, -1, 1), ncol = 2, byrow = T))
add1Distance <- additive1Distance(params, as.matrix(dist(X)), t(Q))

X <- rbind(rmvnorm(50, mean = c(-1, 0.5), sigma = diag(0.25, 2)), rmvnorm(50, mean = c(-1, -0.5), sigma = diag(0.25, 2)),
           rmvnorm(50, mean = c(1, 0.5), sigma = diag(0.25, 2)), rmvnorm(50, mean = c(1, -0.5), sigma = diag(0.25, 2)))
Q <- cbind(matrix(rep(c(0, 1), 100), nrow = 2), matrix(rep(c(1, 0), 100), nrow = 2))
params <- c(1)
add2Distance <- additive2Distance(params, as.matrix(dist(X)), as.matrix(dist(t(Q))))

X <- rbind(rmvnorm(50, mean = c(-1, 0.5), sigma = diag(0.25, 2)), rmvnorm(50, mean = c(-1, -0.5), sigma = diag(0.25, 2)),
           rmvnorm(50, mean = c(1, 0.5), sigma = diag(0.25, 2)), rmvnorm(50, mean = c(1, -0.5), sigma = diag(0.25, 2)))
Q <- cbind(matrix(rep(c(0, 1), 100), nrow = 2), matrix(rep(c(1, 0), 100), nrow = 2))
params = list(u = 1, v = 1, w = 1, V = matrix(c(1, -1, -1, 1), ncol = 2, byrow = T))
locDistance <- localDistance(params, as.matrix(dist(X)), t(Q), as.matrix(dist(t(Q))))

X <- rbind(rmvnorm(50, mean = c(-1, 0.5), sigma = diag(0.25, 2)), rmvnorm(50, mean = c(-1, -0.5), sigma = diag(0.25, 2)),
           rmvnorm(50, mean = c(1, 0.5), sigma = diag(0.25, 2)), rmvnorm(50, mean = c(1, -0.5), sigma = diag(0.25, 2)))
Q <- cbind(matrix(rep(c(0, 1), 100), nrow = 2), matrix(rep(c(1, 0), 100), nrow = 2))
params <- c(1,1)
fairCalc <- fairDistanceCalc(params, "multiplicative", as.matrix(dist(X)), t(Q), as.matrix(dist(t(Q))), 2:4, c(0.5,0.5))

X2 <- rbind(rmvnorm(50, mean = c(-1, 0.5), sigma = diag(0.25, 2)), rmvnorm(50, mean = c(-1, -0.5), sigma = diag(0.25, 2)),
            rmvnorm(50, mean = c(1, 0.5), sigma = diag(0.25, 2)), rmvnorm(50, mean = c(1, -0.5), sigma = diag(0.25, 2)))
Q2 <- cbind(matrix(rep(c(0, 1), 100), nrow = 2), matrix(rep(c(1, 0), 100), nrow = 2))
qhcl <- chargedHclust(X2, Q2, Qf = matrix(c(0.1, 0, 0, 0.1), ncol = 2), tipo = 'centroid', tipoq = 'additive')
mygraph <- graph_from_data_frame(qhcl$edges)
ggraph(mygraph, layout = 'dendrogram', circular = FALSE) + geom_edge_diagonal() +
  geom_node_point() + theme_void() + geom_node_text(aes(label = name, filter = leaf) , angle = 90 , hjust = 1, nudge_y = -0.15) +
  ylim(-.4, NA) + ggtitle('hierarchical tree')